var searchIndex = new Map(JSON.parse('[["rs_tfhe",{"t":"CCCCCCCCCCCCKHMHMKMMHCMCFNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNIFKSNNNNNNNMNMNNCOMNMONNNNFNNNNNNNNNNNNNNNNNFHNHNHNHHHHHHHHHHHHNNNHNHNNNNNNNNHNHNHNNHNHNHNHNHNNNNNNHNHNIFIFIIOONNNNONNNNNNNNNHHHHHNNNNOOONNNNNNNNNNNEEECCCFNNNNNNNNNNNNNNNNONONNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNONNNNNNFKENNNNNNHNNNNNNNOMMCHONNNNNMFNNNNNNNNNNNNNNNNNNNNNNNSSIISSSSSSSSSSSSFSFIFFSOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNOCNNNNNNNNOOOOOOHOONNNNOONNNNNNNNNNNNNNNNSSCCCCSSSSSSSSSSSSSSKRRKFFNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONMNNNNNNNNNNFFHHHHNNNNNNNNNNHHNNNNNNNNHNNNNHNNNNNNNHNNNNNNNNNNFFOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNIHHHHHOH","n":["bit_utils","bootstrap","fft","gates","key","lut","parallel","params","tlwe","trgsw","trlwe","utils","AsBits","convert","encrypt","to_bits","","Bootstrap","bootstrap","bootstrap_without_key_switch","default_bootstrap","lut","name","vanilla","LutBootstrap","bootstrap","bootstrap_func","bootstrap_lut","bootstrap_without_key_switch","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","fmt","from","init","into","name","new","to_owned","try_from","try_into","type_id","vzip","VanillaBootstrap","bootstrap","bootstrap_without_key_switch","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","fmt","from","init","into","name","new","to_owned","try_from","try_into","type_id","vzip","DefaultFFTProcessor","FFTPlan","FFTProcessor","FFT_PLAN","batch_fft","batch_ifft","borrow","borrow_mut","deref","deref_mut","drop","fft","from","ifft","init","into","klemsa","n","new","","poly_mul","processor","try_from","try_into","type_id","vzip","KlemsaProcessor","borrow","borrow_mut","deref","deref_mut","drop","fft","from","ifft","init","into","new","","poly_mul","try_from","try_into","type_id","vzip","Gates","and","","and_ny","","and_yn","","batch_and","batch_and_with_railgun","batch_nand","batch_nand_with_railgun","batch_nor","batch_nor_with_railgun","batch_or","batch_or_with_railgun","batch_xnor","batch_xnor_with_railgun","batch_xor","batch_xor_with_railgun","bootstrap_strategy","borrow","borrow_mut","constant","","copy","","default","deref","deref_mut","drop","from","init","into","mux","","mux_naive","","nand","","new","nor","","not","","or","","or_ny","","or_yn","","try_from","try_into","type_id","vzip","with_bootstrap","xnor","","xor","","BootstrappingKey","CloudKey","KeySwitchingKey","SecretKey","SecretKeyLv0","SecretKeyLv1","blind_rotate_testvec","bootstrapping_key","borrow","","borrow_mut","","decomposition_offset","default","deref","","deref_mut","","drop","","from","","gen_bootstrapping_key","gen_bootstrapping_key_with_railgun","gen_decomposition_offset","gen_key_switching_key","gen_testvec","init","","into","","key_lv0","key_lv1","key_switching_key","new","","new_no_ksk","try_from","","try_into","","type_id","","vzip","","Encoder","Generator","LookupTable","encoder","generator","lookup_table","Encoder","borrow","borrow_mut","clone","clone_into","clone_to_uninit","decode","decode_bool","deref","deref_mut","drop","encode","encode_with_scale","fmt","from","init","into","message_modulus","new","scale","to_owned","try_from","try_into","type_id","vzip","with_scale","Generator","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","from","generate_lookup_table","generate_lookup_table_assign","generate_lookup_table_custom","generate_lookup_table_full","generate_lookup_table_full_assign","init","into","lookup_table_size","message_modulus","mod_switch","new","poly_degree","to_owned","try_from","try_into","type_id","vzip","with_scale","LookupTable","borrow","borrow_mut","clear","clone","clone_into","clone_to_uninit","copy_from","default","deref","deref_mut","drop","fmt","from","","from_poly","init","into","is_empty","new","poly","","poly_mut","to_owned","try_from","try_into","type_id","vzip","ParallelConfig","Railgun","RayonRailgun","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","default_railgun","deref","deref_mut","drop","fmt","from","init","into","num_threads","par_map","par_map_indexed","rayon_impl","rayon_railgun","stack_size","to_owned","try_from","try_into","type_id","vzip","with_config","RayonRailgun","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","fmt","from","init","into","new","par_map","par_map_indexed","to_owned","try_from","try_into","type_id","vzip","with_config","","BSK_ALPHA","DEFAULT_SECURITY","HalfTorus","IntTorus","KSK_ALPHA","SECURITY_110_BIT","SECURITY_128_BIT","SECURITY_80_BIT","SECURITY_UINT1","SECURITY_UINT2","SECURITY_UINT3","SECURITY_UINT4","SECURITY_UINT5","SECURITY_UINT6","SECURITY_UINT7","SECURITY_UINT8","SecurityParams","TORUS_SIZE","TlweParams","Torus","TrgswParams","TrlweParams","ZERO_TORUS","alpha","","","basebit","bg","bgbit","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","description","drop","","","","fmt","","","","from","","","","iks_t","implementation","init","","","","into","","","","l","n","","","nbit","security_bits","security_info","tlwe_lv0","tlwe_lv1","to_owned","","","","trgsw_lv1","trlwe_lv1","try_from","","","","try_into","","","","type_id","","","","vzip","","","","SECURITY_BITS","SECURITY_DESCRIPTION","tlwe_lv0","tlwe_lv1","trgsw_lv1","trlwe_lv1","ALPHA","N","ALPHA","N","ALPHA","BASEBIT","BG","BGBIT","IKS_T","L","N","NBIT","ALPHA","N","AddMul","Output","","SubMul","TLWELv0","TLWELv1","add","add_mul","","b","b_mut","","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","decrypt_bool","decrypt_lwe_message","default","","deref","","deref_mut","","drop","","encrypt_bool","encrypt_f64","encrypt_lwe_message","fmt","from","","init","","into","","mul","neg","new","","p","","sub","sub_mul","","to_owned","try_from","","try_into","","type_id","","vzip","","TRGSWLv1","TRGSWLv1FFT","batch_blind_rotate","batch_blind_rotate_with_railgun","blind_rotate","blind_rotate_with_testvec","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cmux","decomposition","default","deref","","deref_mut","","drop","","encrypt_torus","external_product_with_fft","fmt","","from","","identity_key_switching","init","","into","","new","","new_dummy","poly_mul_with_x_k","to_owned","","try_from","","try_into","","type_id","","vzip","","TRLWELv1","TRLWELv1FFT","a","","b","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","decrypt_bool","default","deref","","deref_mut","","drop","","encrypt_bool","encrypt_f64","fmt","","from","","","init","","into","","new","","new_dummy","sample_extract_index","sample_extract_index_2","to_owned","","try_from","","try_into","","type_id","","vzip","","Ciphertext","f64_to_torus","f64_to_torus_vec","gaussian_f64","gaussian_torus","gussian_f64_vec","p","torus_to_f64"],"q":[[0,"rs_tfhe"],[12,"rs_tfhe::bit_utils"],[17,"rs_tfhe::bootstrap"],[24,"rs_tfhe::bootstrap::lut"],[49,"rs_tfhe::bootstrap::vanilla"],[72,"rs_tfhe::fft"],[98,"rs_tfhe::fft::klemsa"],[116,"rs_tfhe::gates"],[175,"rs_tfhe::key"],[220,"rs_tfhe::lut"],[226,"rs_tfhe::lut::encoder"],[252,"rs_tfhe::lut::generator"],[281,"rs_tfhe::lut::lookup_table"],[309,"rs_tfhe::parallel"],[338,"rs_tfhe::parallel::rayon_impl"],[362,"rs_tfhe::params"],[473,"rs_tfhe::params::implementation"],[479,"rs_tfhe::params::implementation::tlwe_lv0"],[481,"rs_tfhe::params::implementation::tlwe_lv1"],[483,"rs_tfhe::params::implementation::trgsw_lv1"],[491,"rs_tfhe::params::implementation::trlwe_lv1"],[493,"rs_tfhe::tlwe"],[550,"rs_tfhe::trgsw"],[600,"rs_tfhe::trlwe"],[650,"rs_tfhe::utils"],[658,"alloc::vec"],[659,"alloc::boxed"],[660,"core::ops::function"],[661,"core::fmt"],[662,"core::result"],[663,"core::any"],[664,"std::thread::local"],[665,"core::option"],[666,"core::marker"],[667,"alloc::string"],[668,"rand_distr::normal"],[669,"rand::rngs::thread"]],"i":"``````````````h`0`Ab0``0``Aj00000000000000000000000`C`000000000000000000000````Cd0Cl000010100`010100000`D`0000000000000000``Db`0`0````````````000`0`00000000`0`0`00`0`0`0`0`000000`0`0``````Ad0j1011001010101`````010100101101010101```````Eb000000000000000000000000`Ed000000000000000000000000000`B`00000000000000000000000000```Ef00000`00000000Df0``1111110`Eh0000000000000000000000```````````````````````FbFdFf000F`32103210321032103210321032100321032103211`03210321132110`000321000321032103210321`````````````````````FnGb```Fl200G`1010111111010101011111010101110101121101010101``````GdGf10101010``11010101`1010`1010100`1010101010``DhGh1010101010101110101011101101010100``1010101010``````l`","f":"`````````````{{{f{{d{b}}}}}c{}}{{h{f{j}}}{{n{l}}}}{{A`A`}{{n{b}}}}{h{{n{b}}}}`{{{f{Ab}}{f{l}}{f{Ad}}}l}0{{}{{Af{Ab}}}}`{{{f{Ab}}}{{f{Ah}}}}``{{{f{Aj}}{f{l}}{f{Ad}}}l}{{{f{Aj}}{f{l}}cA`{f{Ad}}}l{{An{A`}{{Al{A`}}}}}}{{{f{Aj}}{f{l}}{f{B`}}{f{Ad}}}l}2{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{{{f{Aj}}}Aj}{{f{f{Bbc}}}Bd{}}{{fBf}Bd}{{}Aj}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{{{f{Aj}}{f{BbBh}}}Bj}{cc{}}{{}A`}{{}c{}}{{{f{Aj}}}{{f{Ah}}}}8{fc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{}c{}}`{{{f{C`}}{f{l}}{f{Ad}}}l}0{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{{{f{C`}}}C`}{{f{f{Bbc}}}Bd{}}{{fBf}Bd}{{}C`}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{{{f{C`}}{f{BbBh}}}Bj}{cc{}}{{}A`}{{}c{}}{{{f{C`}}}{{f{Ah}}}}8{fc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{}c{}}```{{}Cb}{{{f{BbCd}}{f{{d{{Ch{Cf}}}}}}}{{n{{Ch{Cj}}}}}}{{{f{BbCd}}{f{{d{{Ch{Cj}}}}}}}{{n{{Ch{Cf}}}}}}{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{{{f{BbCd}}{f{{Ch{Cf}}}}}{{Ch{Cj}}}}{cc{}}{{{f{BbCd}}{f{{Ch{Cj}}}}}{{Ch{Cf}}}}{{}A`}{{}c{}}`{ClA`}{A`Cd}{A`Cl}{{{f{BbCd}}{f{{Ch{Cj}}}}{f{{Ch{Cj}}}}}{{Ch{Cj}}}}{ClCn}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{}c{}}`{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{{{f{BbD`}}{f{{Ch{Cf}}}}}{{Ch{Cj}}}}{cc{}}{{{f{BbD`}}{f{{Ch{Cj}}}}}{{Ch{Cf}}}}{{}A`}{{}c{}}{A`D`}0{{{f{BbD`}}{f{{Ch{Cj}}}}{f{{Ch{Cj}}}}}{{Ch{Cj}}}}?>=<`{{{f{l}}{f{l}}{f{Ad}}}l}{{{f{Db}}{f{l}}{f{l}}{f{Ad}}}l}1010{{{f{{d{{Dd{ll}}}}}}{f{Ad}}}{{n{l}}}}{{{f{{d{{Dd{ll}}}}}}{f{Ad}}{f{c}}}{{n{l}}}Df}1010101010{{{f{Db}}}{{f{Ah}}}}{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{bl}{{{f{Db}}b}l}{{{f{l}}}l}{{{f{Db}}{f{l}}}l}{{}Db}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{cc{}}{{}A`}{{}c{}}{{{f{l}}{f{l}}{f{l}}{f{Ad}}}l}{{{f{Db}}{f{l}}{f{l}}{f{l}}{f{Ad}}}l}10{{{f{l}}{f{l}}{f{Ad}}}l}{{{f{Db}}{f{l}}{f{l}}{f{Ad}}}l}:10<;101010{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{}c{}}{{{Af{Ab}}}Db}6565``````{AdDh}{AdDj}{f{{f{c}}}{}}0{{{f{Bb}}}{{f{Bbc}}}{}}0{AdCj}{{}j}{A`{{f{c}}}{}}0{A`{{f{Bbc}}}{}}0{A`Bd}0{cc{}}0{{{f{j}}}Dj}{{{f{j}}{f{c}}}DjDf}{{}Cj}{{{f{j}}}Dl}{{}Dh}{{}A`}0{{}c{}}0{jDn}{jE`}{AdDl}>{{{f{j}}}Ad}{{}Ad}{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{fBn}0{{}c{}}0```````{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{{{f{Eb}}}Eb}{{f{f{Bbc}}}Bd{}}{{fBf}Bd}{{{f{Eb}}Cj}A`}{{{f{Eb}}Cj}b}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{{{f{Eb}}A`}Cj}{{{f{Eb}}A`Cf}Cj}{{{f{Eb}}{f{BbBh}}}Bj}{cc{}}{{}A`}{{}c{}}{EbA`}{A`Eb}{EbCf}{fc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{}c{}}{{A`Cf}Eb}`{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{{{f{Ed}}}Ed}{{f{f{Bbc}}}Bd{}}{{fBf}Bd}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{{{f{Ed}}{f{BbBh}}}Bj}{cc{}}{{{f{Ed}}c}B`{{An{A`}{{Al{A`}}}}}}{{{f{Ed}}c{f{BbB`}}}Bd{{An{A`}{{Al{A`}}}}}}{{{f{Ed}}cA`Cf}B`{{An{A`}{{Al{A`}}}}}}{{{f{Ed}}c}B`{{An{A`}{{Al{Cj}}}}}}{{{f{Ed}}c{f{BbB`}}}Bd{{An{A`}{{Al{Cj}}}}}}{{}A`}{{}c{}}{{{f{Ed}}}A`}0{{{f{Ed}}Cj}A`}{A`Ed}2{fc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{}c{}}{{A`Cf}Ed}`{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{{{f{BbB`}}}Bd}{{{f{B`}}}B`}{{f{f{Bbc}}}Bd{}}{{fBf}Bd}{{{f{BbB`}}{f{B`}}}Bd}{{}B`}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{{{f{B`}}{f{BbBh}}}Bj}{cc{}}{DhB`}0{{}A`}{{}c{}}{{{f{B`}}}b}9{{{f{B`}}}{{f{Dh}}}}{B`Dh}{{{f{BbB`}}}{{f{BbDh}}}}{fc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{}c{}}```{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{{{f{Ef}}}Ef}{{f{f{Bbc}}}Bd{}}{{fBf}Bd}{{}Ef}{{}{{f{Eh}}}}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{{{f{Ef}}{f{BbBh}}}Bj}{cc{}}{{}A`}{{}c{}}{EfEj}{{{f{Df}}{f{{d{c}}}}g}{{n{e}}}ElEn{{An{{f{c}}}{{Al{e}}}}ElEn}}{{{f{Df}}{f{{d{c}}}}g}{{n{e}}}ElEn{{An{A`{f{c}}}{{Al{e}}}}ElEn}}`{EfEh}3{fc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{}c{}}{{{f{Df}}Efe}cEn{{An{}{{Al{c}}}}EnEl}}`{f{{f{c}}}{}}{{{f{Bb}}}{{f{Bbc}}}{}}{{{f{Eh}}}Eh}{{f{f{Bbc}}}Bd{}}{{fBf}Bd}{{}Eh}{A`{{f{c}}}{}}{A`{{f{Bbc}}}{}}{A`Bd}{{{f{Eh}}{f{BbBh}}}Bj}{cc{}}{{}A`}{{}c{}}7{{{f{Eh}}{f{{d{c}}}}g}{{n{e}}}ElEn{{An{{f{c}}}{{Al{e}}}}ElEn}}{{{f{Eh}}{f{{d{c}}}}g}{{n{e}}}ElEn{{An{A`{f{c}}}{{Al{e}}}}ElEn}}{fc{}}{c{{Bl{e}}}{}{}}{{}{{Bl{c}}}{}}{fBn}{{}c{}}{{{f{Eh}}Efe}cEn{{An{}{{Al{c}}}}EnEl}}{EfEh}{{}Cf}{{}F`}``100000000000`<````{{}Cj}{FbCf}{FdCf}{FfCf}{FfA`}{FfFh}0{f{{f{c}}}{}}000{{{f{Bb}}}{{f{Bbc}}}{}}000{{{f{F`}}}F`}{{{f{Fb}}}Fb}{{{f{Fd}}}Fd}{{{f{Ff}}}Ff}{{f{f{Bbc}}}Bd{}}000{{fBf}Bd}000{A`{{f{c}}}{}}000{A`{{f{Bbc}}}{}}000{F`f}{A`Bd}000{{{f{F`}}{f{BbBh}}}Bj}{{{f{Fb}}{f{BbBh}}}Bj}{{{f{Fd}}{f{BbBh}}}Bj}{{{f{Ff}}{f{BbBh}}}Bj}{cc{}}000{FfA`}`{{}A`}000{{}c{}}0002{FbA`}{FdA`}44{F`A`}{F`Fj}{F`Fb}0{fc{}}000{F`Ff}{F`Fd}{c{{Bl{e}}}{}{}}000{{}{{Bl{c}}}{}}000{fBn}000{{}c{}}000={{}f}````{{}Cf}?0?0?{{}Fh}0{{}A`}00020``````{{{f{Fl}}{f{Fl}}}Fl}{{{Fn{}{{Al{c}}}}eCj}c{}{}}{{{f{Fl}}{f{Fl}}Cj}Fl}{{{f{Fl}}}Cj}{{{f{BbG`}}}{{f{BbCj}}}}{{{f{BbFl}}}{{f{BbCj}}}}{f{{f{c}}}{}}0{{{f{Bb}}}{{f{Bbc}}}{}}0{{{f{Fl}}}Fl}{{f{f{Bbc}}}Bd{}}{{fBf}Bd}{{{f{Fl}}{f{Dn}}}b}{{{f{Fl}}A`{f{Dn}}}A`}{{}G`}{{}Fl}{A`{{f{c}}}{}}0{A`{{f{Bbc}}}{}}0{A`Bd}0{{bCf{f{Dn}}}Fl}{{CfCf{f{Dn}}}Fl}{{A`A`Cf{f{Dn}}}Fl}{{{f{Fl}}{f{BbBh}}}Bj}{cc{}}0{{}A`}0{{}c{}}0{{{f{Fl}}{f{Fl}}}Fl}{FlFl}=<{G`Ch}{FlCh}3{{{Gb{}{{Al{c}}}}eCj}c{}{}}{{{f{Fl}}{f{Fl}}Cj}Fl}{fc{}}{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{fBn}0{{}c{}}0``{{{f{{d{Fl}}}}{f{Ad}}}{{n{Dh}}}}{{{f{{d{Fl}}}}{f{Ad}}{f{c}}}{{n{Dh}}}Df}{{{f{Fl}}{f{Ad}}}Dh}{{{f{Fl}}{f{Dh}}{f{Ad}}}Dh}{f{{f{c}}}{}}0{{{f{Bb}}}{{f{Bbc}}}{}}0{{{f{Gd}}}Gd}{{{f{Gf}}}Gf}{{f{f{Bbc}}}Bd{}}0{{fBf}Bd}0{{{f{Dh}}{f{Dh}}{f{Gf}}{f{Ad}}{f{BbCl}}}Dh}{{{f{Dh}}{f{Ad}}}{{Ch{{Ch{Cj}}}}}}{{}Gd}{A`{{f{c}}}{}}0{A`{{f{Bbc}}}{}}0{A`Bd}0{{CjCf{f{E`}}{f{BbCl}}}Gd}{{{f{Gf}}{f{Dh}}{f{Ad}}{f{BbCl}}}Dh}{{{f{Gd}}{f{BbBh}}}Bj}{{{f{Gf}}{f{BbBh}}}Bj}{cc{}}0{{{f{G`}}{f{Dl}}}Fl}{{}A`}0{{}c{}}0;{{{f{Gd}}{f{BbCl}}}Gf}{{}Gf}{{{f{{Ch{Cj}}}}A`}{{Ch{Cj}}}}{fc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{fBn}0{{}c{}}0``{DhCh}{GhCh}10{f{{f{c}}}{}}0{{{f{Bb}}}{{f{Bbc}}}{}}0{{{f{Dh}}}Dh}{{{f{Gh}}}Gh}{{f{f{Bbc}}}Bd{}}0{{fBf}Bd}0{{{f{Dh}}{f{E`}}{f{BbCl}}}{{n{b}}}}{{}Dh}{A`{{f{c}}}{}}0{A`{{f{Bbc}}}{}}0{A`Bd}0{{{f{{d{b}}}}Cf{f{E`}}{f{BbCl}}}Dh}{{{f{{d{Cf}}}}Cf{f{E`}}{f{BbCl}}}Dh}{{{f{Dh}}{f{BbBh}}}Bj}{{{f{Gh}}{f{BbBh}}}Bj}{B`Dh}{cc{}}0{{}A`}0{{}c{}}0;{{{f{Dh}}{f{BbCl}}}Gh}{{}Gh}{{{f{Dh}}A`}G`}{{{f{Dh}}A`}Fl}{fc{}}0{c{{Bl{e}}}{}{}}0{{}{{Bl{c}}}{}}0{fBn}0{{}c{}}0`{CfCj}{{{f{{d{Cf}}}}}{{n{Cj}}}}{{Cf{f{{Gj{Cf}}}}{f{BbGl}}}Cj}{{Cj{f{{Gj{Cf}}}}{f{BbGl}}}Cj}{{{f{{d{Cf}}}}{f{{Gj{Cf}}}}{f{BbGl}}}{{n{Cj}}}}{lCh}{CjCf}","D":"AFf","p":[[1,"bool"],[1,"slice"],[1,"reference",null,null,1],[10,"AsBits",12],[5,"SecretKey",175],[8,"Ciphertext",650],[5,"Vec",658],[1,"usize"],[10,"Bootstrap",17],[5,"CloudKey",175],[5,"Box",659,null,1],[1,"str"],[5,"LutBootstrap",24],[17,"Output"],[10,"Fn",660],[5,"LookupTable",281],[0,"mut"],[1,"unit"],[1,"u8"],[5,"Formatter",661],[8,"Result",661],[6,"Result",662,null,1],[5,"TypeId",663],[5,"VanillaBootstrap",49],[5,"LocalKey",664],[10,"FFTProcessor",72],[1,"f64"],[1,"array"],[8,"Torus",362],[5,"FFTPlan",72],[8,"DefaultFFTProcessor",72],[5,"KlemsaProcessor",98],[5,"Gates",116],[1,"tuple",null,null,1],[10,"Railgun",309],[5,"TRLWELv1",600],[8,"BootstrappingKey",175],[8,"KeySwitchingKey",175],[8,"SecretKeyLv0",175],[8,"SecretKeyLv1",175],[5,"Encoder",226],[5,"Generator",252],[5,"ParallelConfig",309],[5,"RayonRailgun",338],[6,"Option",665,null,1],[10,"Sync",666],[10,"Send",666],[5,"SecurityParams",362],[5,"TlweParams",362],[5,"TrlweParams",362],[5,"TrgswParams",362],[1,"u32"],[5,"String",667],[5,"TLWELv0",493],[10,"AddMul",493],[5,"TLWELv1",493],[10,"SubMul",493],[5,"TRGSWLv1",550],[5,"TRGSWLv1FFT",550],[5,"TRLWELv1FFT",600],[5,"Normal",668],[5,"ThreadRng",669]],"r":[[220,226],[221,252],[222,281],[311,338]],"b":[[109,"impl-KlemsaProcessor"],[110,"impl-FFTProcessor-for-KlemsaProcessor"],[360,"impl-Railgun-for-RayonRailgun"],[361,"impl-RayonRailgun"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAN8BSwAAAAIABAABAAgABQAQAAAAGAAAABoAAAAdAAoAKQAAACsAAAAtAAQAMwALAEAAAABCAAAARAAGAEwAAABPAAQAVwAAAFoAAABcAAAAXgAEAGQABQBrAAEAbgAGAH0AAAB/AAAAgQAAAIMAAACFAAAAhwAAAIkAAQCPAAMAlAAAAKcAAwCwABMAxgAGAM8AEADkAAQA6wACAPAAAADyAAAA9wAEAP4ACAANAQAAFAEEABsBAQAeAQIAIgEEACgBAAAqAQAAMQEEADgBCwBFAQAATQEEAFQBCQBfAQAAYgEHAGsBAABtAQIAfAEBAH8BLQCxAQAAswEDALsBBQDCASwA8QEQAAMCCQAOAgAAEQIBABUCEwArAgAALQIWAEYCAgBLAioAeAIBAHwCFgA=","P":[[13,"T"],[14,""],[26,"F"],[27,""],[29,"T"],[31,""],[32,"T"],[33,""],[35,"T"],[37,""],[39,"T"],[40,""],[41,"U"],[42,""],[44,"T"],[45,"U,T"],[46,"U"],[47,""],[48,"V"],[50,""],[52,"T"],[54,""],[55,"T"],[56,""],[58,"T"],[60,""],[62,"T"],[63,""],[64,"U"],[65,""],[67,"T"],[68,"U,T"],[69,"U"],[70,""],[71,"V"],[75,""],[78,"T"],[82,""],[84,"T"],[85,""],[87,"U"],[89,""],[94,"U,T"],[95,"U"],[96,""],[97,"V"],[99,"T"],[103,""],[105,"T"],[106,""],[108,"U"],[109,""],[112,"U,T"],[113,"U"],[114,""],[115,"V"],[117,""],[124,"R"],[125,""],[126,"R"],[127,""],[128,"R"],[129,""],[130,"R"],[131,""],[132,"R"],[133,""],[134,"R"],[135,""],[136,"T"],[138,""],[143,"T"],[145,""],[146,"T"],[147,""],[148,"U"],[149,""],[166,"U,T"],[167,"U"],[168,""],[169,"V"],[170,""],[183,"T"],[187,""],[189,"T"],[193,""],[195,"T"],[197,""],[198,"R"],[199,""],[204,"U"],[206,""],[212,"U,T"],[214,"U"],[216,""],[218,"V"],[227,"T"],[229,""],[230,"T"],[231,""],[234,"T"],[236,""],[240,"T"],[241,""],[242,"U"],[243,""],[246,"T"],[247,"U,T"],[248,"U"],[249,""],[250,"V"],[251,""],[253,"T"],[255,""],[256,"T"],[257,""],[258,"T"],[260,""],[262,"T"],[263,"F"],[268,""],[269,"U"],[270,""],[275,"T"],[276,"U,T"],[277,"U"],[278,""],[279,"V"],[280,""],[282,"T"],[284,""],[286,"T"],[287,""],[290,"T"],[292,""],[294,"T"],[295,""],[298,"U"],[299,""],[304,"T"],[305,"U,T"],[306,"U"],[307,""],[308,"V"],[312,"T"],[314,""],[315,"T"],[316,""],[319,"T"],[321,""],[323,"T"],[324,""],[325,"U"],[326,""],[327,"T,U,F"],[330,""],[332,"T"],[333,"U,T"],[334,"U"],[335,""],[336,"V"],[337,"R,F"],[339,"T"],[341,""],[342,"T"],[343,""],[345,"T"],[347,""],[349,"T"],[350,""],[351,"U"],[352,""],[353,"T,U,F"],[355,"T"],[356,"U,T"],[357,"U"],[358,""],[359,"V"],[360,"R,F"],[361,""],[391,"T"],[399,""],[403,"T"],[407,""],[411,"T"],[419,""],[428,"T"],[432,""],[438,"U"],[442,""],[451,"T"],[455,""],[457,"U,T"],[461,"U"],[465,""],[469,"V"],[473,""],[500,"AddMul::Output,Rhs"],[501,""],[505,"T"],[509,""],[510,"T"],[511,""],[516,"T"],[520,""],[526,"T"],[528,""],[530,"U"],[532,""],[539,"SubMul::Output,Rhs"],[540,""],[541,"T"],[542,"U,T"],[544,"U"],[546,""],[548,"V"],[552,""],[553,"R"],[554,""],[556,"T"],[560,""],[562,"T"],[564,""],[569,"T"],[573,""],[579,"T"],[581,""],[584,"U"],[586,""],[590,"T"],[592,"U,T"],[594,"U"],[596,""],[598,"V"],[602,""],[606,"T"],[610,""],[612,"T"],[614,""],[618,"T"],[622,""],[629,"T"],[631,""],[633,"U"],[635,""],[640,"T"],[642,"U,T"],[644,"U"],[646,""],[648,"V"],[651,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[19125]}