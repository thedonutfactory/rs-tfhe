name: Publish to Crates.io

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  publish:
    name: Publish to Crates.io
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Install Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: stable

    - name: Build and test
      run: |
        cargo build --verbose
        cargo test --verbose
        cargo test --verbose --features "lut-bootstrap"

    - name: Check package
      run: cargo package --verbose

    - name: Publish to crates.io
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      run: cargo publish --verbose

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: publish
    steps:
    - uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate changelog
      id: changelog
      run: |
        # Extract changelog from the tag message or generate from commits
        if [ -f CHANGELOG.md ]; then
          # Extract version section from CHANGELOG.md
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          sed -n "/^## \[$VERSION\]/,/^## \[/p" CHANGELOG.md | head -n -1 > release_notes.md
        else
          # Generate from git log
          git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD > release_notes.md
        fi

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: false
